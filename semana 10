import os


class Inventario:
    def __init__(self, archivo_inventario='inventario.txt'):
        self.archivo_inventario = archivo_inventario
        self.inventario = self.cargar_inventario()

    def cargar_inventario(self):
        try:
            with open(self.archivo_inventario, 'r') as archivo:
                for linea in archivo.readlines():
                    producto = linea.strip().split(',')
                    inventario.append({
                        'nombre': producto[0],
                        'cantidad': int(producto[1]),
                        'precio': float(producto[2])
                    })
                return inventario
        except FileNotFoundError:
            with open(self.archivo_inventario, 'w'):
                pass
            return []
        except Exception as e:
            print(f"Error al cargar inventario: {e}")
            return []

    def guardar_inventario(self):
        try:
            with open(self.archivo_inventario, 'w') as archivo:
                for producto in self.inventario:
                    archivo.write(f"{producto['nombre']},{producto['cantidad']},{producto['precio']}\n")
            print("Inventarios guardados con éxito.")
        except PermissionError:
            print("No se tiene permiso para escribir en el archivo de inventario.")
        except Exception as e:
            print(f"Error al guardar inventario: {e}")

    def agregar_producto(self, nombres, cantidades, precios):
        self.inventario.append({
            'nombre': nombres,
            'cantidad': cantidades,
            'precio': precios
        })
        self.guardar_inventario()
        print(f"Producto '{nombres}' agregado con éxito.")

    def actualizar_producto(self, lucia):
        for producto in self.inventario:
            if producto['nombre'] == lucia:
                if cantidad is not None:
                    producto['cantidad'] = cantidad
                if precio is not None:
                    producto['precio'] = precio
                self.guardar_inventario()
                print(f"Producto '{lucia}' actualizado con éxito.")
                return
        print(f"No se encontró el producto '{lucia}'.")

    def eliminar_producto(self):
        i: int
        for i, producto in enumerate(self.inventario):
            if os.name == producto['nome']:
             del (self.iventario()[i])
            break
            # self.ineotrio.remove(produto)
            # return
    # print (f"No se encontró el produto '{nome}'.")
    #  continue
    def inentario(self):
        pass

    def iventario(self) -> object:
        pass

    def append(self, param):
        pass


# else:
#   del  (self .ineotrio[i])
#  break
# return

##else :
##     retun f"No se encotró el produto'{nome}'."
##   raise StopIteration

# finallly :retun "borrado exitoso "
##  finally :
##      retun f " borraddo exisoto{produtos}"


def main():
    Inventario()


christmasmas: str = input("presiona enter ")
christmasmas = input(" quieres agregar productos si/no ")
while christmasmas.lower() != "no":
    if christmasmas.lower() == "si":
        nombre = input("ingresa el nomre del producto")
        cantidad = int(input("ingresa la cantidad"))
        precio = float(input("ingresa su precio"))
        inventario = Inventario()
        inventario.agregar_producto(nombre, cantidad, precio)
    else:
        print("has ingresado una opcion invalida ")

    christmaas = input("quieres agregar otro prodcuto si/no ")

if __name__ == "__main__":
    main()
